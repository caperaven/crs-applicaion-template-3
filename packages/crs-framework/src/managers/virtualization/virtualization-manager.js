import{SizeManager as a}from"./size-manager.js";import{InflationManager as r}from"./inflation-manager.js";import{ScrollManager as c}from"../scroll-manager/scroll-manager.js";class f{#t;#s;#r;#e={};#n=0;#h=0;#i=0;#o;#l;#a=!1;#c=0;constructor(t,i,e,n,h){this.#s=t,this.#r=i,this.#o=new r(n,e);const s=this.#s.getBoundingClientRect();crs.call("data_manager","record_count",{manager:n}).then(o=>{this.#t=new a(h,o,s.height),this.#i=Math.floor(this.#t.pageItemCount/2),this.#l=new c(this.#s,null,this.#w.bind(this),this.#x.bind(this),this.#t.itemSize),this.#u()})}dispose(){for(const t of Object.keys(this.#e))this.#e[t]=null;return this.#t=this.#t.dispose(),this.#l=this.#l.dispose(),this.#o=this.#o.dispose(),this.#e=null,this.#s=null,this.#r=null,this.#n=null,this.#h=null,this.#i=null,this.#t=null,this.#o=null,this.#l=null,this.#a=null,this.#c=null,null}#u(){this.#s.style.position="relative",this.#s.style.overflowY="auto",this.#s.style.willChange="transform",this.#y(),this.#f()}#f(){const t=document.createElement("div");t.id="marker",t.style.height="1px",t.style.width="1px",t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.translate=`0px ${this.#t.contentHeight}px`,this.#s.appendChild(t)}#y(){const t=document.createDocumentFragment();let i=this.#t.pageItemCount+this.#i*2;for(let e=-this.#i;e<i-this.#i;e++){const n=e*this.#t.itemSize,h=this.#r.content.cloneNode(!0),s=h.firstElementChild;s.style.position="absolute",s.style.top="0",s.style.right="4px",s.style.left="4px",s.style.willChange="translate",e>=0&&this.#o.inflate(s,e),this.#d(s,n),t.appendChild(h)}this.#s.appendChild(t),this.#g(),this.#n=-this.#i,this.#h=i-1-this.#i}#g(){for(let t=0;t<this.#s.children.length;t++){const i=-this.#i+t;this.#e[i]=this.#s.children[t]}}#d(t,i){i>=this.#t.contentHeight&&(i=-this.#t.itemSize*2),t.style.transform=`translate(0, ${i}px)`}async#w(t,i,e,n){const h=Math.floor(e/this.#t.itemSize),s=Math.floor(i/this.#t.itemSize);h<=this.#i?(this.#a=!1,n==="down"?await this.#M(s,h):await this.#S(s,h)):this.#a=!0}async#M(t){const e=t-this.#n-this.#i,n=this.#n,h=n+e;for(let s=n;s<h;s++){const o=this.#e[s],l=this.#h+1;await this.#m(o,l,s,1)}}async#S(t){const i=t-this.#n,e=Math.abs(i-this.#i),n=this.#h,h=n-e;for(let s=n;s>h;s--){const o=this.#e[s],l=this.#n-1;if(l<0)return;await this.#m(o,l,s,-1)}}async#m(t,i,e,n){this.#e[i]=t,delete this.#e[e],i<=this.#t.itemCount&&(this.#d(t,i*this.#t.itemSize),await this.#o.inflate(t,i)),this.#h+=n,this.#n+=n}async#x(t,i){this.#a&&await this.#p(i),this.#c=i}async#p(t){const i=Math.floor(t/this.#t.itemSize)-this.#i;let e=0;const n={};for(let h=this.#n;h<=this.#h;h++){const s=this.#e[h],o=i+e;if(n[o]=s,e++,o<=this.#t.itemCount){const l=o*this.#t.itemSize;this.#d(s,l),await this.#o.inflate(s,o)}}this.#e=n,this.#n=i,this.#h=i+e-1}async refreshCurrent(){await this.#p(this.#c)}}export{f as VirtualizationManager};
