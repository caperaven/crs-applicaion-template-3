class u{#t;#s;#n;#l;#e;#i;#a=this.#h.bind(this);constructor(t,e,s,i,n,l){this.#t=t,this.#s=e,this.#n=s,this.#l=i,this.#e=n,this.#i=l,this.#t.addEventListener("click",this.#a)}dispose(){return this.#t.removeEventListener("click",this.#a),this.#a=null,this.#t=null,this.#s=null,this.#n=null,this.#e=null,this.#l=null,this.#i=null,null}#r(t){return t.matches(this.#s)}#c(t){return t.matches(this.#n)}#d(t){return t.dataset.group!==void 0}async#h(t){const e=h(t.composedPath()[0]);if(e==null)return;const s=e.getAttribute("aria-checked")==="true",i=e.dataset.id,n=e.dataset.index;if(this.#r(e))return await this.#u(s);if(this.#c(e))return await this.#o(e,i,n,s)}async#u(t){await crs.call("data_manager","set_select_all",{manager:this.#e,selected:t}),this.#i&&await this.#i.__virtualizationManager.refreshCurrent()}async#m(t,e){}async#o(t,e,s,i){const n=e==null?[]:[Number(e)],l=s==null?[]:[Number(s)];await crs.call("data_manager","set_selected",{manager:this.#e,ids:n,indexes:l,selected:i});const r=await crs.call("data_manager","is_all_selected",{manager:this.#e}),c=this.#t.querySelector(this.#s);c.checked=r}}function h(a){if(a.matches("check-box"))return a;const t=a.getRootNode();return t.host==null?null:t.host.matches("check-box")?t.host:null}export{u as CollectionSelectionManager};
