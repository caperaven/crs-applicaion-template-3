import{loadHTML as a}from"./../../src/load-resources.js";class s extends HTMLElement{#t=1;#e=this.#a.bind(this);get clickedHandler(){return this.#e}get value(){return this.#t}get html(){return import.meta.url.replace(".js",".html")}constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){this.shadowRoot.innerHTML=await a(import.meta.url),await this.load()}async load(){requestAnimationFrame(()=>{this.shadowRoot.querySelector("[data-id='label']").textContent=this.dataset.label,this.shadowRoot.addEventListener("click",this.#e)})}async disconnectedCallback(){await this.shadowRoot.removeEventListener("click",this.#e),this.#e=null}async#a(t){const e=t.composedPath()[0];e.dataset.action!=null&&await this[e.dataset.action](t),this.shadowRoot.querySelector("[data-id='value']").textContent=this.#t,this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,detail:{value:this.#t}})),t.stopPropagation()}async increment(t){this.#t++}async decrement(t){this.#t--,this.#t<=0&&(this.#t=1)}}customElements.define("label-counter",s);export{s as LabelCounter};
