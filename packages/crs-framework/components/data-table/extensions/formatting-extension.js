import{DataTableExtensions as u}from"./../data-table-extensions.js";class a{#t;#s;constructor(t,n){this.#t=n,this.#s=t}dispose(){return this.#t=null,this.#s=null,u.FORMATTING.path}#n(t){(this.#t.rows??[]).length!==0&&this.#e(t,this.#t.rows,"rowElement")}#o(t){if(this.#t.columns!=null){t.push("let cellElement;");for(const n of Object.keys(this.#t.columns)){const e=this.#t.columns[n];t.push("cellElement = rowElement.children["+this.#s.getColumnIndex(n)+"];"),t.push("cellElement.classList = [];"),this.#e(t,e,"cellElement")}}}#e(t,n,e){const o=new Set,l=[];for(const i of n){if(m(i.styles,`${e}`,o),i.condition!=null){l.push(`if (${i.condition}) {`),r(i.classes,`    ${e}`,l),c(i.styles,`    ${e}`,l),l.push("}");continue}r(i.classes,e,l),c(i.styles,e,l)}const h=Array.from(o);t.push(...h,...l)}createFormattingCode(t){t.push("rowElement.classList = [];"),this.#n(t),this.#o(t)}}function r(s,t,n){s||=[];for(const e of s)n.push(`${t}.classList.add("${e}");`)}function c(s,t,n){if(s||="",s.length!==0){s=s.split(";");for(const e of s){const o=e.split(":");o.length>1&&n.push(`${t}.style["${o[0].trim()}"] = "${o[1].trim()}";`)}}}function m(s,t,n){if(s||="",s.length!==0){s=s.split(";");for(const e of s){const o=e.split(":");o.length>1&&n.add(`${t}.style["${o[0].trim()}"] = "";`)}}}export{a as default};
