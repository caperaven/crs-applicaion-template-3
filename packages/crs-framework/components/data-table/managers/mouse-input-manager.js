class c{#t;#i=this.#l.bind(this);#e=this.#c.bind(this);#s={};constructor(t){this.#t=t,this.#t.shadowRoot.addEventListener("click",this.#i),this.#t.shadowRoot.addEventListener("dblclick",this.#e)}dispose(){return this.#t.shadowRoot.removeEventListener("click",this.#i),this.#t.shadowRoot.removeEventListener("dblclick",this.#e),this.#t=null,this.#i=null,this.#e=null,this.#s=null,null}async#l(t){const s=t.composedPath()[0];for(const i of Object.keys(this.#s))if(s.matches(i)){const e=this.#s[i];await e(t)}}async#c(t){}async addClickHandler(t,s){this.#s[t]=s}async removeClickHandler(t){delete this.#s[t]}}export{c as MouseInputManager};
