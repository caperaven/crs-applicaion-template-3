class i{#s;#a;#i;#t;#e;#h;#n={ArrowRight:this.#p,ArrowLeft:this.#f,ArrowUp:this.#g,ArrowDown:this.#m,Enter:this.#w};#l={months:this.#A,years:this.#q,default:this.#k};#o={months:this.#b,years:this.#v,default:this.#I};set currentIndex(t){this.#t=t}constructor(t){this.#s=t,this.#a=this.#y.bind(this),this.#s.shadowRoot.addEventListener("keydown",this.#a)}dispose(){return this.#s.shadowRoot.removeEventListener("keydown",this.#a),this.#s=null,this.#a=null,this.#i=null,this.#t=null,this.#e=null,this.#h=null,this.#u(this.#n),this.#n=null,this.#u(this.#l),this.#l=null,this.#u(this.#o),this.#o=null,null}async#y(t){this.#n[t.key]&&(await this.#x(),await this.#c(),t.key!=="Enter"&&(this.#i[this.#t].tabIndex=-1),this.#n[t.key].call(this,t))}async#w(t){this.#h!=null&&await this.#o[this.#h].call(this,t)}async#p(t){this.#t=this.#t+1>=this.#i.length?this.#t:this.#t+1,await this.#r()}async#f(t){this.#t-1<0&&this.#h==="default"?(await this.#s.goToPrevious(),this.#t=await this.#d("sub",1)):this.#t=this.#t-1<0?this.#t:this.#t-1,await this.#r()}async#g(t){this.#t-this.#e<0&&this.#h==="default"?(await this.#s.goToPrevious(),this.#t=await this.#d("sub",this.#e)):this.#t=this.#t-this.#e<0?this.#t:this.#t-this.#e,await this.#r()}async#m(t){this.#t+this.#e>=this.#i.length&&this.#h==="default"?(await this.#s.goToNext(),this.#t=await this.#d("add",this.#e)):this.#t=this.#t+this.#e>=this.#i.length?this.#t:this.#t+this.#e,await this.#r()}async#d(t,s){return await this.#c(),this.#s.calendars.querySelector("[tabindex='0']").tabIndex=-1,t==="add"?this.#t+parseInt(s):this.#t-parseInt(s)}async#I(t){await this.#s.selectedDate(null,t.composedPath()[0])}async#b(t){const s=t.composedPath()[0];isNaN(parseInt(s.dataset.value))!==!0&&await this.#s.selectedMonthChanged(parseInt(s.dataset.value))}async#v(t){const s=t.composedPath()[0];isNaN(parseInt(s.dataset.value))!==!0&&await this.#s.selectedYearChanged(parseInt(s.dataset.value))}async#r(){this.#i[this.#t].tabIndex=0,this.#i[this.#t].focus(),this.#h==="default"&&await this.#C(this.#i[this.#t])}async#c(){this.#i=this.#s.shadowRoot.querySelectorAll("[role='cell'],[data-type='month-cell'],[data-type='year-cell']"),this.#t=Array.prototype.findIndex.call(this.#i,t=>t.tabIndex===0)}async#x(){this.#h=this.#s.selectedView,this.#h!=null&&await this.#l[this.#h].call(this)}async#k(){this.#e=7}async#A(){this.#e=3}async#q(){this.#e=4}async#C(t){this.#s.dispatchEvent(new CustomEvent("change-month",{detail:t,bubbles:!0,composed:!0}))}#u(t){for(const s of Object.keys(t))t[s]=null}}export{i as CalendarKeyboardInputManager};
