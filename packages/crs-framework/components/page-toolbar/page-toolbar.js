import{CHANGE_TYPES as e}from"../../src/managers/data-manager/data-manager-types.js";import{loadHTML as s}from"./../../src/load-resources.js";class h extends HTMLElement{#a=0;#t;#e;#s=this.#m.bind(this);#r=this.#u.bind(this);#n=this.#p.bind(this);#h;#o;get lastPage(){return this.#t}get pageSize(){return Number(this.#h.value)}set pageSize(t){t=Number(t),t<1&&(t=1),this.#h.value=Number(t)}get pageNumber(){return Number(this.#o.value||1)}set pageNumber(t){t=Number(t),t<1&&(t=1),t>this.#t&&(t=this.#t),this.#o.value=t}constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){this.shadowRoot.innerHTML=await s(import.meta.url),await this.load(),await crs.call("component","notify_ready",{element:this})}load(){return new Promise(t=>{requestAnimationFrame(async()=>{this.setAttribute("role","toolbar"),this.#h=this.shadowRoot.querySelector("#edtPageSize"),this.#o=this.shadowRoot.querySelector("#edtPageNumber"),this.#e=this.dataset.manager,await this.#g(),this.#e=this.dataset.manager,await this.#l(),this.shadowRoot.addEventListener("click",this.#r),this.shadowRoot.addEventListener("change",this.#n),t()})})}async disconnectedCallback(){this.shadowRoot.removeEventListener("click",this.#r),this.shadowRoot.removeEventListener("change",this.#n),await this.#d(),this.#s=null,this.#r=null,this.#n=null,this.#h=null,this.#o=null,this.#e=null,this.#t=null,this.#a=null}async#g(){const t=this.shadowRoot.querySelector("#divLabel");await crs.binding.translations.parseElement(t)}async#l(){const t=this.getRootNode().querySelector(this.getAttribute("for"));t.dataset.paged=!0,this.#e=t.dataset.manager,await crs.call("data_manager","on_change",{manager:this.#e,callback:this.#s}),this.#a=await crs.call("data_manager","record_count",{manager:this.#e}),this.#a<this.pageSize&&(this.pageSize=this.#a),this.#c(),this.#a>0&&await crs.call("component","on_ready",{element:t,callback:async()=>{await this.#i()},caller:this})}async#d(){await crs.call("data_manager","remove_change",{manager:this.#e,callback:this.#s})}async#m(t){t.action==e.refresh&&(this.#a=t.count,this.#c(),await this.#i())}async#u(t){if(t==null)return;const a=t.composedPath()[0];await{gotoFirstPage:this.#w,gotoPreviousPage:this.#f,gotoNextPage:this.#P,gotoLastPage:this.#N}[a.id]?.call(this)}async#p(t){if(t==null)return;const a=t.composedPath()[0];await{pageSize:this.#b,edtPageNumber:this.#y}[a.dataset.property]?.call(this,a.value)}async#b(t){if(t>100)return this.pageSize=100;if(t<1)return this.pageSize=1;if(t>this.#a)return this.pageSize=this.#a;this.pageSize=t,this.#c(),await this.#i()}async#y(t){t<1&&(t=1),t>this.#t&&(t=this.#t),this.pageNumber=t,await this.#i()}async#w(){this.pageNumber=1,await this.#i()}async#f(){this.pageNumber-=1,await this.#i()}async#P(){this.pageNumber+=1,await this.#i()}async#N(){this.pageNumber=this.#t,await this.#i()}async#i(){this.shadowRoot.querySelector("#edtPageNumber").value=this.pageNumber;const t=this.getRootNode().querySelector(this.getAttribute("for")),a=await crs.call("data_manager","get_page",{manager:this.#e,page:this.pageNumber,size:this.pageSize});t?.refresh(a)}#c(){this.#t=Math.ceil(this.#a/this.pageSize),this.#t<1&&(this.#t=1),this.shadowRoot.querySelector("#divPageCount").textContent=this.#t,this.shadowRoot.querySelector("#divTotalCount").textContent=this.#a}async onMessage(t){switch(t.action){case"data-manager-changed":{this.#e=t.manager;const a=(await crs.call("data_manager","get_counts",{manager:this.#e})).total;await this.#s({action:e.refresh,count:a});break}}}}customElements.define("page-toolbar",h);export{h as PageToolbar};
